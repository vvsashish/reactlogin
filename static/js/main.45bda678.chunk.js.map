{"version":3,"sources":["Components/js/Login.js","Components/js/Employees.js","App.js","reportWebVitals.js","store/Reducer.js","index.js"],"names":["Login","props","state","UserName","Password","Message","handleClick","bind","handleChange","togglePassword","document","getElementById","focus","this","setState","e","inputValue","target","value","id","pwd","type","isCredentialsValid","LoginConfig","checkCredentials","className","title","onChange","onClick","React","Component","connect","Config","LogInData","dispatch","data","payload","Employees","fetch","then","json","config","console","log","EmployeeConfig","user","map","employee","class","name","age","gender","email","phoneNo","EmployeeData","App","getConfig","IsCredentialsValid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginReducer","action","newState","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.45bda678.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            UserName: \"\",\r\n            Password: \"\",\r\n            Message: \"\"\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.togglePassword = this.togglePassword.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.getElementById(\"userName\").focus();\r\n        this.setState({ UserName: \"\", Password: \"\", Message: \"\" });\r\n\r\n    }\r\n    handleChange(e) {\r\n        let inputValue = e.target.value;\r\n        (e.target.id == \"userName\") ? this.setState({ UserName: inputValue }) : this.setState({ Password: inputValue })\r\n    }\r\n    togglePassword() {\r\n        let pwd = document.getElementById(\"password\");\r\n        if (pwd.type === \"password\") {\r\n            pwd.type = \"text\";\r\n        } else {\r\n            pwd.type = \"password\";\r\n        }\r\n    }\r\n    handleClick() {\r\n        let isCredentialsValid = (this.state.UserName == this.props.LoginConfig.UserName && this.state.Password == this.props.LoginConfig.Password) ? true : false;\r\n        this.props.checkCredentials(isCredentialsValid);\r\n        if (!isCredentialsValid) this.setState({ Message: \"**Invalid Credentials\" });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <div>\r\n                    <span>UserName</span>\r\n                    <input id=\"userName\" type=\"textbox\" title=\"Please enter userName\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div>\r\n                    <span>Password</span>\r\n                    <input id=\"password\" type=\"password\" title=\"Please enter password\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div><input type=\"checkbox\" onClick={this.togglePassword} />Show Password</div>\r\n                <div className=\"login-btn\">\r\n                    <input type=\"button\" title=\"Login\" value=\"Login\" onClick={this.handleClick}></input>\r\n                </div>\r\n                <div className=\"message\">{this.state.Message}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        LoginConfig: state.Config.LogInData\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkCredentials: (data) => {\r\n            dispatch({\r\n                type: \"CHECK_LOGIN_CREDENTIALS\",\r\n                payload: data\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Employees extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        fetch('config.json')\r\n            .then((data) => data.json())\r\n            .then((config) => {\r\n                console.log(config);\r\n            });\r\n    }\r\n    handleClick() {\r\n        this.props.checkCredentials(false);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"employee-header\">\r\n                    <span>Employee List</span>\r\n                    <input className=\"signout-btn\" type=\"button\" value=\"Sign Out\" onClick={this.handleClick} ></input>\r\n                </div>\r\n                {\r\n                    this.props.EmployeeConfig.user.map((employee) => {\r\n                        return (\r\n                            <div class=\"employee-details\">\r\n                                <div><span>ID</span><span>{employee.id}</span></div>\r\n                                <div><span>Name</span><span>{employee.name}</span></div>\r\n                                <div><span>Age</span><span>{employee.age}</span></div>\r\n                                <div><span>Gender</span><span>{employee.gender}</span></div>\r\n                                <div><span>Email</span><span>{employee.email}</span></div>\r\n                                <div><span>Contact</span><span>{employee.phoneNo}</span></div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        EmployeeConfig: state.Config.EmployeeData\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkCredentials: (data) => {\r\n            dispatch({\r\n                type: \"CHECK_LOGIN_CREDENTIALS\",\r\n                payload: data\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Employees);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Components/js/Login';\nimport Employees from './Components/js/Employees';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n  componentDidMount() {\n    fetch('config.json')\n      .then((data) => data.json())\n      .then((config) => {\n        this.props.getConfig(config);\n      });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          (this.props.IsCredentialsValid) ? <Employees /> : <Login />\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    IsCredentialsValid: state.IsCredentialsValid\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getConfig: (data) => {\n      dispatch({\n        type: \"GET_CONFIG\",\n        payload: data\n      })\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    IsCredentialsValid: false,\r\n    Config:{}\r\n};\r\nconst loginReducer = (state = initialState, action) => {\r\n    const newState = { ...state };\r\n    switch (action.type) {\r\n        case \"CHECK_LOGIN_CREDENTIALS\":\r\n            newState.IsCredentialsValid = action.payload;\r\n            break;\r\n        case \"GET_CONFIG\":\r\n            newState.Config= action.payload;\r\n            break;\r\n        default:\r\n            return newState;\r\n    }\r\n    return newState;\r\n}\r\nexport default loginReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport loginReducer from './store/Reducer';\n\nconst store = createStore(loginReducer);\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}