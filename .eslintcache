[{"C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\index.js":"1","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\reportWebVitals.js":"2","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\App.js":"3","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\Components\\js\\Login.js":"4","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\Components\\js\\Employees.js":"5","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\store\\Reducer.js":"6"},{"size":647,"mtime":1608125626698,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":922,"mtime":1608140562201,"results":"10","hashOfConfig":"8"},{"size":2676,"mtime":1608178384427,"results":"11","hashOfConfig":"8"},{"size":2103,"mtime":1608141345161,"results":"12","hashOfConfig":"8"},{"size":519,"mtime":1608136493655,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bh1p7a",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\index.js",[],["29","30"],"C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\reportWebVitals.js",[],"C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\App.js",["31"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Components/js/Login';\nimport Employees from './Components/js/Employees';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n  componentDidMount() {\n    fetch('config.json')\n      .then((data) => data.json())\n      .then((config) => {\n        this.props.getConfig(config);\n      });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          (this.props.IsCredentialsValid) ? <Employees /> : <Login />\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    IsCredentialsValid: state.IsCredentialsValid\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getConfig: (data) => {\n      dispatch({\n        type: \"GET_CONFIG\",\n        payload: data\n      })\n    }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\Components\\js\\Login.js",["32","33","34"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            UserName: \"\",\r\n            Password: \"\",\r\n            Message: \"\"\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.togglePassword = this.togglePassword.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        document.getElementById(\"userName\").focus();\r\n        this.setState({ UserName: \"\", Password: \"\", Message: \"\" });\r\n\r\n    }\r\n    handleChange(e) {\r\n        let inputValue = e.target.value;\r\n        (e.target.id == \"userName\") ? this.setState({ UserName: inputValue }) : this.setState({ Password: inputValue })\r\n    }\r\n    togglePassword() {\r\n        let pwd = document.getElementById(\"password\");\r\n        if (pwd.type === \"password\") {\r\n            pwd.type = \"text\";\r\n        } else {\r\n            pwd.type = \"password\";\r\n        }\r\n    }\r\n    handleClick() {\r\n        let isCredentialsValid = (this.state.UserName == this.props.LoginConfig.UserName && this.state.Password == this.props.LoginConfig.Password) ? true : false;\r\n        this.props.checkCredentials(isCredentialsValid);\r\n        if (!isCredentialsValid) this.setState({ Message: \"**Invalid Credentials\" });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <div>\r\n                    <span>UserName</span>\r\n                    <input id=\"userName\" type=\"textbox\" title=\"Please enter userName\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div>\r\n                    <span>Password</span>\r\n                    <input id=\"password\" type=\"password\" title=\"Please enter password\" onChange={this.handleChange}></input>\r\n                </div>\r\n                <div><input type=\"checkbox\" onClick={this.togglePassword} />Show Password</div>\r\n                <div className=\"login-btn\">\r\n                    <input type=\"button\" title=\"Login\" value=\"Login\" onClick={this.handleClick}></input>\r\n                </div>\r\n                <div className=\"message\">{this.state.Message}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        LoginConfig: state.Config.LogInData\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        checkCredentials: (data) => {\r\n            dispatch({\r\n                type: \"CHECK_LOGIN_CREDENTIALS\",\r\n                payload: data\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\Components\\js\\Employees.js",[],"C:\\Ashish\\Demo Projects\\Demo\\react-login\\src\\store\\Reducer.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":3,"nodeType":"41","messageId":"42","endLine":10,"endColumn":4},{"ruleId":"43","severity":1,"message":"44","line":23,"column":22,"nodeType":"45","messageId":"46","endLine":23,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":34,"column":55,"nodeType":"45","messageId":"46","endLine":34,"endColumn":57},{"ruleId":"43","severity":1,"message":"44","line":34,"column":113,"nodeType":"45","messageId":"46","endLine":34,"endColumn":115},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]